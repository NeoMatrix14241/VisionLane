name: Pylint

on: [push, pull_request]

jobs:
  pylint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev libglib2.0-0 libxext6 libxrender-dev libgomp1
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        # Install project dependencies with fallback options
        pip install numpy torch torchvision opencv-python-headless Pillow psutil pynvml gputil
        # Install PyQt6 and python-doctr separately (may have platform issues)
        pip install PyQt6 || echo "PyQt6 installation failed, continuing without GUI support"
        pip install python-doctr || echo "python-doctr installation failed, continuing without doctr"
        # Install additional dependencies if requirements.txt exists, excluding Windows-specific packages
        if [ -f requirements.txt ]; then 
          # Filter out Windows-specific packages that won't install on Linux
          grep -v "python-magic-bin" requirements.txt | grep -v "pywin32" | pip install -r /dev/stdin || echo "Some packages failed to install, continuing..."
        fi
    
    - name: Create pylint config
      run: |
        cat > .pylintrc << 'EOF'
        [MASTER]
        init-hook='import sys; sys.path.append(".")'
        ignore=CVS,.git,__pycache__,.pytest_cache,.venv,venv,env,build,dist,data/output,logs,temp,.cache
        jobs=1
        unsafe-load-any-extension=no
        extension-pkg-allow-list=cv2,numpy,torch,torchvision,PIL,PyQt6,doctr

        [MESSAGES CONTROL]
        disable=raw-checker-failed,bad-inline-option,locally-disabled,file-ignored,suppressed-message,useless-suppression,deprecated-pragma,use-symbolic-message-instead,too-many-arguments,too-many-locals,too-many-branches,too-many-statements,too-many-instance-attributes,too-many-public-methods,too-few-public-methods,import-outside-toplevel,wrong-import-position,wrong-import-order,ungrouped-imports,invalid-name,missing-module-docstring,missing-class-docstring,missing-function-docstring,cyclic-import,unused-argument,unused-variable,broad-except,bare-except,global-statement,global-variable-undefined,no-member,line-too-long,consider-using-f-string,logging-not-lazy,logging-format-interpolation,super-with-arguments,duplicate-code
        enable=c-extension-no-member

        [TYPECHECK]
        generated-members=numpy.*,torch.*,cv2.*,PyQt6.*,PIL.*,doctr.*
        ignored-modules=numpy,torch,torchvision,cv2,PIL,PyQt6,doctr,pynvml,GPUtil
        EOF
        echo "Created inline pylint configuration"

    - name: Analysing the code with pylint
      run: |
        echo "Running pylint to check code quality, style, and potential bugs..."
        pylint $(git ls-files '*.py') --output-format=text --reports=yes --score=yes
        echo "Pylint analysis completed. Check the logs above for any issues found."
